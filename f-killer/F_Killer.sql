SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS FILE;
DROP TABLE IF EXISTS INVITE_ALARM;
DROP TABLE IF EXISTS JOB_ALARM;
DROP TABLE IF EXISTS JOB;
DROP TABLE IF EXISTS MEETING_ALARM;
DROP TABLE IF EXISTS PART_IN;
DROP TABLE IF EXISTS MEETING;
DROP TABLE IF EXISTS NOTICE_ALARM;
DROP TABLE IF EXISTS NOTICE;
DROP TABLE IF EXISTS PROFESSOR;
DROP TABLE IF EXISTS WORK_IN;
DROP TABLE IF EXISTS TEAM;
DROP TABLE IF EXISTS TIMETABLE;
DROP TABLE IF EXISTS USER;




/* Create Tables */

CREATE TABLE COMMENT
(
	COMMENT_NO int NOT NULL AUTO_INCREMENT,
	USER_NO int NOT NULL,
	JOB_NO int NOT NULL,
	COMMENT_DESC text NOT NULL,
	REG_DATE timestamp NOT NULL,
	PRIMARY KEY (COMMENT_NO)
)character set = utf8;


CREATE TABLE FILE
(
	FILE_NO int NOT NULL,
	JOB_NO int NOT NULL,
	FILE_NAME varchar(100) NOT NULL,
	FILE_SIZE varchar(10) NOT NULL,
	REG_DATE timestamp NOT NULL,
	UPD_DATE timestamp NOT NULL,
	PRIMARY KEY (FILE_NO)
)character set = utf8;


CREATE TABLE INVITE_ALARM
(
	INVITE_ALARM_NO int NOT NULL AUTO_INCREMENT,
	USER_NO int NOT NULL,
	TEAM_NO int NOT NULL,
	SEND_DATE timestamp NOT NULL,
	PRIMARY KEY (INVITE_NO)
)character set = utf8;


CREATE TABLE JOB
(
	JOB_NO int NOT NULL AUTO_INCREMENT,
	WORK_IN_NO int NOT NULL,
	JOB_TITLE varchar(50) NOT NULL,
	PROP tinyint NOT NULL,
	DUE_DATE timestamp NOT NULL,
	JOB_DESC text,
	STATE tinyint NOT NULL,
	REG_DATE timestamp,
	UPD_DATE timestamp,
	PRIMARY KEY (JOB_NO)
)character set = utf8;


CREATE TABLE JOB_ALARM
(
	JOB_ALARM_NO int NOT NULL AUTO_INCREMENT,
	JOB_NO int NOT NULL,
	USER_NO int NOT NULL,
	SEND_DATE timestamp NOT NULL,
	PRIMARY KEY (JOB_ALARM_NO)
)character set = utf8;


CREATE TABLE MEETING
(
	MEETING_NO int NOT NULL AUTO_INCREMENT,
	TEAM_NO int NOT NULL,
	MEETING_DATE timestamp NOT NULL,
	MEETING_TIME timestamp NOT NULL,
	MEETING_TOPIC varchar(200) NOT NULL,
	MEETING_TITLE varchar(100) NOT NULL,
	MEETING_DESC text,
	MEETING_LOC varchar(200),
	STATE boolean default false,
	REG_DATE timestamp,
	UPD_DATE timestamp,
	PRIMARY KEY (MEETING_NO)
)character set = utf8;


CREATE TABLE MEETING_ALARM
(
	MEETING_ALARM_NO int NOT NULL AUTO_INCREMENT,
	MEETING_NO int NOT NULL,
	USER_NO int NOT NULL,
	SEND_DATE timestamp NOT NULL,
	PRIMARY KEY (MEETING_ALARM_NO)
)character set = utf8;


CREATE TABLE NOTICE
(
	NOTICE_NO int NOT NULL AUTO_INCREMENT,
	USER_NO int NOT NULL,
	TEAM_NO int NOT NULL,
	NOTICE_TITLE varchar(50) NOT NULL,
	NOTICE_DESC text NOT NULL,
	REG_DATE timestamp,
	UPD_DATE timestamp,
	PRIMARY KEY (NOTICE_NO)
)character set = utf8;


CREATE TABLE NOTICE_ALARM
(
	NOTICE_ALARM_NO int NOT NULL AUTO_INCREMENT,
	USER_NO int NOT NULL,
	NOTICE_NO int NOT NULL,
	SEND_DATE timestamp NOT NULL,
	PRIMARY KEY (NOTICE_ALARM_NO)
)character set = utf8;


CREATE TABLE PART_IN
(
	PART_IN_NO int NOT NULL AUTO_INCREMENT,
	USER_NO int NOT NULL,
	MEETING_NO int NOT NULL,
	STATE boolean default false,
	PRIMARY KEY (PART_IN_NO)
)character set = utf8;


CREATE TABLE PROFESSOR
(
	PROF_NO int NOT NULL AUTO_INCREMENT,
	TEAM_NO int NOT NULL,
	EMAIL varchar(50) NOT NULL,
	CYCLE varchar(10),
	AUTO boolean,
	REG_DATE timestamp
	UPD_DATE timestamp,
	REPORT_DATE timestamp,
	PRIMARY KEY (PROF_NO)
)character set = utf8;


CREATE TABLE TEAM
(
	TEAM_NO int NOT NULL AUTO_INCREMENT,
	TEAM_NAME varchar(50) NOT NULL,
	TEAM_TOPIC text NOT NULL,
	START_DATE timestamp NOT NULL,
	END_DATE timestamp NOT NULL,
	OPER boolean NOT NULL,
	REG_DATE timestamp,
	UPD_DATE timestamp,
	LEADER_NO int NOT NULL,
	PRIMARY KEY (TEAM_NO)
)character set = utf8;


CREATE TABLE TIMETABLE
(
	USER_NO int NOT NULL,
	MON varchar(30),
	TUE varchar(30),
	WED varchar(30),
	THU varchar(30),
	FRI varchar(30),
	SAT varchar(30),
	SUN varchar(30)
) character set = utf8;


CREATE TABLE USER
(
	USER_NO int NOT NULL AUTO_INCREMENT,
	USER_NAME varchar(20) NOT NULL,
	USER_EMAIL varchar(50) NOT NULL,
	USER_PWD varchar(100) NOT NULL,
	USER_PROFILE varchar(200),
	JOIN_METHOD varchar(50) NOT NULL,
	REG_DATE timestamp,
	DEL_FLG boolean DEFAULT false,
	DEL_DATE timestamp,
	PRIMARY KEY (USER_NO),
	UNIQUE (USER_EMAIL)
) character set = utf8;


CREATE TABLE WORK_IN
(
	WORK_IN_NO int NOT NULL AUTO_INCREMENT,
	TEAM_NO int NOT NULL,
	USER_NO int NOT NULL,
	AUTH boolean DEFAULT false NOT NULL,
	MEMBER_COLOR varchar(20) NOT NULL,
	TEAM_COLOR varchar(20) NOT NULL,
	FAVORITES boolean,
	PENALTYCNT int DEFAULT 0,
	DEL_FLG boolean DEFAULT false,
	DEL_DATE timestamp,
	REG_DATE timestamp,
	PRIMARY KEY (WORK_IN_NO)
)character set = utf8;



/* Create Foreign Keys */

ALTER TABLE COMMENT
	ADD FOREIGN KEY (JOB_NO)
	REFERENCES JOB (JOB_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE FILE
	ADD FOREIGN KEY (JOB_NO)
	REFERENCES JOB (JOB_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE JOB_ALARM
	ADD FOREIGN KEY (JOB_NO)
	REFERENCES JOB (JOB_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE MEETING_ALARM
	ADD FOREIGN KEY (MEETING_NO)
	REFERENCES MEETING (MEETING_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE PART_IN
	ADD FOREIGN KEY (MEETING_NO)
	REFERENCES MEETING (MEETING_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE NOTICE_ALARM
	ADD FOREIGN KEY (NOTICE_NO)
	REFERENCES NOTICE (NOTICE_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE INVITE_ALARM
	ADD FOREIGN KEY (TEAM_NO)
	REFERENCES TEAM (TEAM_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE MEETING
	ADD FOREIGN KEY (TEAM_NO)
	REFERENCES TEAM (TEAM_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE NOTICE
	ADD FOREIGN KEY (TEAM_NO)
	REFERENCES TEAM (TEAM_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE PROFESSOR
	ADD FOREIGN KEY (TEAM_NO)
	REFERENCES TEAM (TEAM_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE WORK_IN
	ADD FOREIGN KEY (TEAM_NO)
	REFERENCES TEAM (TEAM_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE COMMENT
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE NO ACTION
;


ALTER TABLE INVITE_ALARM
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE MEETING_ALARM
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE NOTICE
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE NO ACTION
;


ALTER TABLE NOTICE_ALARM
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE PART_IN
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE TIMETABLE
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE WORK_IN
	ADD FOREIGN KEY (USER_NO)
	REFERENCES USER (USER_NO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


ALTER TABLE JOB
	ADD FOREIGN KEY (WORK_IN_NO)
	REFERENCES WORK_IN (WORK_IN_NO)
	ON UPDATE CASCADE
	ON DELETE NO ACTION
;

create view part_in_view as
select meeting_no,user.user_no, user_name, part_in.state,work_in.team_no
from work_in join user on
work_in.user_no = user.user_no
join part_in on part_in.user_no = user.user_no;


